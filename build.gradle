// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.4.20'

    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.17.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'
    repositories {
        google()
        jcenter()
        
    }
}

def libraryGroupId = 'com.route4me'
def libraryArtifactId = 'trucksurvey'

// Setting this property to true will make the artifactoryPublish task
// skip this module (in our case, the root module):
artifactoryPublish.skip = true

project('survey') {
    artifactoryPublish.dependsOn('build')
    publishing {
        publications {
            aar(MavenPublication) {
                groupId = libraryGroupId
                artifactId = libraryArtifactId
                version = project.version
                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

                // Build a pom file which will be published, so the consumer does not
                // need to declare all dependencies manually.
                pom.withXml {
                    final dependenciesNode = asNode().appendNode('dependencies')

                    ext.addDependency = { Dependency dep, String scope ->
                        if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                            return // ignore invalid dependencies

                        final dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dep.group)
                        dependencyNode.appendNode('artifactId', dep.name)
                        dependencyNode.appendNode('version', dep.version)
                        dependencyNode.appendNode('scope', scope)

                        if (!dep.transitive) {
                            // If this dependency is transitive, we should force exclude
                            // all of its dependencies from the POM
                            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                            exclusionNode.appendNode('groupId', '*')
                            exclusionNode.appendNode('artifactId', '*')
                        } else if (!dep.properties.excludeRules.empty) {
                            // Otherwise add specified exclude rules
                            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                            dep.properties.excludeRules.each { ExcludeRule rule ->
                                exclusionNode.appendNode('groupId', rule.group ?: '*')
                                exclusionNode.appendNode('artifactId', rule.module ?: '*')
                            }
                        }
                    }
                    // Map all gradle dependencies to maven dependencies (the compile dependency of gradle is only
                    // present to support legacy gradle build files)
                    configurations.compile       .getAllDependencies().each { dep -> addDependency(dep, "compile") }
                    configurations.api           .getAllDependencies().each { dep -> addDependency(dep, "compile") }
                    configurations.implementation.getAllDependencies().each { dep -> addDependency(dep, "runtime") }
                }
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.aar)
    }
}

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new Date().toString())

    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'mobile-app-all'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
        defaults {
            publishArtifacts = true
            publishBuildInfo = false
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            publishPom = true
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
